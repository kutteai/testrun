"use strict";(self.webpackChunkpaycio_wallet=self.webpackChunkpaycio_wallet||[]).push([[623],{85623:function(t,o,e){e.d(o,{PortfolioManager:function(){return i}});var a=e(18336);const r={ethereum:"ethereum",bsc:"binancecoin",polygon:"matic-network",avalanche:"avalanche-2",arbitrum:"ethereum",optimism:"ethereum",bitcoin:"bitcoin",solana:"solana",tron:"tron",litecoin:"litecoin",ton:"the-open-network",xrp:"ripple"};class i{constructor(){this.portfolioValue=null,this.history=[],this.loadPortfolioData()}async loadPortfolioData(){try{chrome.storage.local.get(["portfolioValue","portfolioHistory"],t=>{t.portfolioValue&&(this.portfolioValue=t.portfolioValue),t.portfolioHistory&&(this.history=t.portfolioHistory)})}catch(t){}}async savePortfolioData(){try{chrome.storage.local.set({portfolioValue:this.portfolioValue,portfolioHistory:this.history})}catch(t){}}async updatePortfolio(){try{const t=await this.getWalletFromStorage();if(!t?.address)throw new Error("No wallet found");const o=t.address,e=["ethereum","bsc","polygon","avalanche","arbitrum","optimism"],i=[];for(const t of e)try{const e=await(0,a.getRealBalance)(o,t);parseFloat(e)/Math.pow(10,18)>1e-4&&i.push({network:t,symbol:this.getNetworkSymbol(t),balance:e,usdValue:0,change24h:0,changePercent:0})}catch(t){}const s=i.map(t=>r[t.network]).filter(Boolean),l=await(0,a.Ei)(s);let n=0;for(const t of i){const o=l[r[t.network]]||0,e=parseFloat(t.balance)/Math.pow(10,18);t.usdValue=e*o,n+=t.usdValue}const c=await this.get24hPriceChanges(s);let h=0;for(const t of i){const o=c[r[t.network]];o&&(t.change24h=t.usdValue*o.changePercent/100,t.changePercent=o.changePercent,h+=t.change24h)}const p=n>0?h/(n-h)*100:0;this.portfolioValue={totalUSD:n,totalChange24h:h,totalChangePercent:p,assets:i,rates:l,lastUpdated:Date.now()},this.history.push({timestamp:Date.now(),totalUSD:n,change24h:h});const u=Date.now()-2592e6;return this.history=this.history.filter(t=>t.timestamp>u),await this.savePortfolioData(),this.portfolioValue}catch(t){throw t}}async get24hPriceChanges(t){try{const o=this.getConfig().COINGECKO_API_KEY,e="https://api.coingecko.com/api/v3",a=t.join(","),r=o?`${e}/simple/price?ids=${a}&vs_currencies=usd&include_24hr_change=true&x_cg_demo_api_key=${o}`:`${e}/simple/price?ids=${a}&vs_currencies=usd&include_24hr_change=true`,i=await fetch(r);if(!i.ok)throw new Error(`HTTP error! status: ${i.status}`);const s=await i.json(),l={};return t.forEach(t=>{l[t]={changePercent:s[t]?.usd_24h_change||0}}),l}catch(t){return{}}}async getWalletFromStorage(){return new Promise(t=>{chrome.storage.local.get(["wallet"],o=>{t(o.wallet||null)})})}getNetworkSymbol(t){return{ethereum:"ETH",bsc:"BNB",polygon:"MATIC",avalanche:"AVAX",arbitrum:"ETH",optimism:"ETH",bitcoin:"BTC",solana:"SOL",tron:"TRX",litecoin:"LTC",ton:"TON",xrp:"XRP"}[t]||t.toUpperCase()}getConfig(){return"undefined"!=typeof window?{INFURA_PROJECT_ID:"ed5ebbc74c634fb3a8010a172c834989",ALCHEMY_API_KEY:"CfyYH4G3iTZbli3r0Ehs-",ETHERSCAN_API_KEY:"BHHF8ZRY9EUVY2TSBKGPVEKVKKB9AHVC4K",COINGECKO_API_KEY:"your_coingecko_api_key_here",COINMARKETCAP_API_KEY:"your_coinmarketcap_api_key_here",OPENSEA_API_KEY:"42407c6c5775459a9c279d5bc4cd36fd",ALCHEMY_NFT_API_KEY:"your_alchemy_nft_api_key_here",DEFI_PULSE_API_KEY:"your_defi_pulse_api_key_here",ENS_RPC_URL:"https://mainnet.infura.io/v3/ed5ebbc74c634fb3a8010a172c834989",IPFS_GATEWAY:"https://ipfs.io/ipfs/",CUSTOM_RPC_ENDPOINTS:{},SECURITY:{AUTO_LOCK_TIMEOUT:15,MAX_FAILED_ATTEMPTS:5,SESSION_TIMEOUT:30,REQUIRE_PASSWORD:!0,ENABLE_BIOMETRIC:!1},FEATURES:{ENABLE_NFT_SUPPORT:!0,ENABLE_DEFI_INTEGRATION:!0,ENABLE_PORTFOLIO_TRACKING:!0,ENABLE_HARDWARE_WALLET:!0,ENABLE_WALLET_CONNECT:!0},NETWORKS:{ethereum:{rpcUrl:"https://mainnet.infura.io/v3/ed5ebbc74c634fb3a8010a172c834989",chainId:"0x1",explorerUrl:"https://etherscan.io",symbol:"ETH",decimals:18,isEnabled:!0},bsc:{rpcUrl:"https://bsc-dataseed.binance.org",chainId:"0x38",explorerUrl:"https://bscscan.com",symbol:"BNB",decimals:18,isEnabled:!0},polygon:{rpcUrl:"https://polygon-rpc.com",chainId:"0x89",explorerUrl:"https://polygonscan.com",symbol:"MATIC",decimals:18,isEnabled:!0},avalanche:{rpcUrl:"https://api.avax.network/ext/bc/C/rpc",chainId:"0xa86a",explorerUrl:"https://snowtrace.io",symbol:"AVAX",decimals:18,isEnabled:!0},arbitrum:{rpcUrl:"https://arb1.arbitrum.io/rpc",chainId:"0xa4b1",explorerUrl:"https://arbiscan.io",symbol:"ETH",decimals:18,isEnabled:!0},optimism:{rpcUrl:"https://mainnet.optimism.io",chainId:"0xa",explorerUrl:"https://optimistic.etherscan.io",symbol:"ETH",decimals:18,isEnabled:!0}}}:{COINGECKO_API_KEY:""}}getPortfolioValue(){return this.portfolioValue}getPortfolio(){return this.portfolioValue}getPortfolioHistory(){return this.history}getAssetValue(t,o){if(!this.portfolioValue)return 0;const e=this.portfolioValue.assets.find(e=>e.network===t&&e.symbol===o);return e?e.usdValue:0}getTotalValue(){return this.portfolioValue?.totalUSD||0}async refreshPortfolio(){await this.updatePortfolio()}async clearPortfolio(){this.portfolioValue=null,this.history=[],await this.savePortfolioData()}getStatistics(){return this.portfolioValue?{totalValue:this.portfolioValue.totalUSD,totalChange24h:this.portfolioValue.totalChange24h,totalChangePercent:this.portfolioValue.totalChangePercent,assetCount:this.portfolioValue.assets.length,lastUpdated:this.portfolioValue.lastUpdated}:{totalValue:0,totalChange24h:0,totalChangePercent:0,assetCount:0,lastUpdated:null}}}}}]);